---
import { type CollectionEntry, getCollection } from "astro:content";
import { render } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import type { Post } from "../../types/post";
import { getSortedBlogPosts } from "../../utils/getPosts";

export async function getStaticPaths() {
	const posts = await getSortedBlogPosts();
	return posts.map((post:Post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content } = await render(post);
console.log(Content);
---

<!--<BlogPost {...post.data}>
	<Content />
</BlogPost>-->
<Layout>
	<section style="max-width: 700px; margin: 0 auto; padding: 2rem 1rem;">
		<article>
			<header style="margin-bottom: 2rem;">
				<h1 style="font-size: 2.5rem; font-weight: bold; margin-bottom: 0.5rem;">{post.data.title}</h1>
				{post.data.description && (
					<p style="font-size: 1.2rem; margin-bottom: 0.5rem; color: #555;">{post.data.description}</p>
				)}
				<p style="font-style: italic; font-size: 1rem; color: #888; margin-bottom: 1.5rem;">
					{post.data.date instanceof Date ? post.data.date.toISOString().slice(0, 10) : post.data.date}
				</p>
				<hr style="border: none; border-top: 1px solid #eee; margin: 1.5rem 0;" />
			</header>
			<section class="prose prose-neutral max-w-none">
				<Content />
			</section>
		</article>
	</section>
</Layout>
